$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1440px,
);

@mixin responseve($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}. Please use one of the defined breakpoints.";
  }
}

@mixin responseve-min($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}. Please use one of the defined breakpoints.";
  }
}
$padding-content: 2rem;

%max-content-width {
  max-width: map-get($breakpoints, xxl);
  margin: 0 auto;

  @include responseve(xxl) {
    padding-right: $padding-content;
    padding-left: $padding-content;
  }
}

//  @include responseve(md) {
//    width: 30%;
//  }
